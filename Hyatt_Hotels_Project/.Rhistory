final_df <- clean_data('data/out-201501.csv')
library(data.table)
temp_df <- data.frame()
clean_data <- function(read_file)
{
df <- fread(read_file , select = c('ROOM_TYPE_CODE_C','LENGTH_OF_STAY_C','Guest_Checkin_Date_H','Length_Stay_H','Guest_Country_H','Gender_H','POV_H','Likelihood_Recommend_H','Overall_Sat_H','Guest_Room_H','Condition_Hotel_H','Customer_SVC_H','Staff_Cared_H','Internet_Sat_H','Check_In_H','F&B_Overall_Experience_H','City_PL','State_PL','Brand_PL','NPS_Type' , 'Tranquility_H' , 'Spa_Used_H' , 'Clublounge_Used_H' , 'Age_Range_H' ))
df <- na.omit(df)
temp_df <- rbind(temp_df,df)
return(temp_df)
}
final_df <- clean_data('data/out-201501.csv')
setwd("~/687_Final_Project")
final_df <- clean_data('data/out-201501.csv')
library(arules)
df_hotel_business <- df_hotel_final[df_hotel_final$POV_H=='Business']
df_hotel_final <- final_df
df_hotel_business <- df_hotel_final[df_hotel_final$POV_H=='Business']
t1<- ggplot(data=df_hotel_business, aes(x=as.numeric(Tranquility_H),y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb")  +
labs(y="LRH",x="Tranquility")
library(ggplot2)
t1<- ggplot(data=df_hotel_business, aes(x=as.numeric(Tranquility_H),y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb")  +
labs(y="LRH",x="Tranquility")
t1
t2<- ggplot(data=df_hotel_business, aes(x=as.numeric(Condition_Hotel_H),y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb")  +
labs(y="LRH",x="Condition of Hotel")
t3<- ggplot(data=df_hotel_business, aes(x=as.numeric(Internet_Sat_H),y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb") +
labs(y="LRH",x="Internet Satisfaction")
t4<- ggplot(data=df_hotel_business, aes(x=as.numeric(Check_In_H),y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb")  +
labs(y="LRH",x="Check in Procedure")
t5<- ggplot(data=df_hotel_business, aes(x=as.numeric(Customer_SVC_H),y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb") +
labs(y="LRH",x="Customer Service")
t6<- ggplot(data=df_hotel_business, aes(x=as.numeric(Staff_Cared_H),y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se",color="blue", fill="#87ceeb") +
labs(y="LRH",x="Staff_Cared_H")
grid.arrange(t1,t2,t3,t4,t5,t6)
library(gridExtra)
grid.arrange(t1,t2,t3,t4,t5,t6)
t7<- ggplot(data=(df_hotel_business[df_hotel_business$`Pool-Indoor_PL`!='']), aes(x=`Pool-Indoor_PL`,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" ,  width = 0.3)  +
labs(y="LRH",x="Pool-Indoor")
t8<- ggplot(data=df_hotel_business[df_hotel_business$Spa_PL!=''], aes(x=Spa_PL,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" , width = 0.3)  +
labs(y="LRH",x="Spa")
t9<- ggplot(data=df_hotel_business[df_hotel_business$`Business Center_PL`!=''], aes(x=`Business Center_PL`,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" , width = 0.3) +
labs(y="LRH",x="Business Center")
t10<- ggplot(data=df_hotel_business[df_hotel_business$Golf_PL!=''], aes(x=Golf_PL,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" , width = 0.3)  +
labs(y="LRH",x="Golf")
grid.arrange(t7,t8,t9,t10)
t7<- ggplot(data=(df_hotel_business[df_hotel_business$`Pool-Indoor_PL`!='']), aes(x=`Pool-Indoor_PL`,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" ,  width = 0.3)  +
labs(y="LRH",x="Pool-Indoor")
t7
amenities_data <- function(read_file)
{
df <- fread(read_file , select = c('ROOM_TYPE_CODE_C','LENGTH_OF_STAY_C','Guest_Checkin_Date_H','Length_Stay_H','Guest_Country_H','Gender_H','POV_H','Likelihood_Recommend_H','Overall_Sat_H','Guest_Room_H','Condition_Hotel_H','Customer_SVC_H','Staff_Cared_H','Internet_Sat_H','Check_In_H','F&B_Overall_Experience_H','City_PL','State_PL','Brand_PL','NPS_Type' , 'Tranquility_H' , 'Spa_Used_H' , 'Clublounge_Used_H' , 'Age_Range_H' ))
df <- na.omit(df)
temp_df <- rbind(temp_df,df)
return(temp_df)
}
amenities_data <- function(read_file)
{
df <- fread(read_file , select = c('Pool-Indoor_PL','Spa_PL','Business Center_PL','Golf_PL','Limo Service_PL	Mini-Bar_PL','Fitness Center_PL','Likelihood_Recommend_H'))
df <- na.omit(df)
temp_df <- rbind(temp_df,df)
return(temp_df)
}
df <- amenities_data('data/out-201501.csv')
amenities_data <- function(read_file)
{
df <- fread(read_file , select = c('Pool-Indoor_PL','Spa_PL','Business Center_PL','Golf_PL','Limo Service_PL	Mini-Bar_PL','Fitness Center_PL','Likelihood_Recommend_H','POV-H'))
df <- na.omit(df)
temp_df <- rbind(temp_df,df)
return(temp_df)
}
df <- amenities_data('data/out-201501.csv')
colnames(df)
colnames(df_hotel_business)
amenities_data <- function(read_file)
{
df <- fread(read_file , select = c('Pool-Indoor_PL','Spa_PL','Business Center_PL','Golf_PL','Limo Service_PL	Mini-Bar_PL','Fitness Center_PL','Likelihood_Recommend_H','POV_H'))
df <- na.omit(df)
temp_df <- rbind(temp_df,df)
return(temp_df)
}
df <- amenities_data('data/out-201501.csv')
df_amenities_business <- df[df$POV_H=='Business']
t7<- ggplot(data=(df_amenities_business[df_amenities_business$`Pool-Indoor_PL`!='']), aes(x=`Pool-Indoor_PL`,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" ,  width = 0.3)  +
labs(y="LRH",x="Pool-Indoor")
t7
t8<- ggplot(data=df_amenities_business[df_amenities_business$Spa_PL!=''], aes(x=Spa_PL,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" , width = 0.3)  +
labs(y="LRH",x="Spa")
t8
t9<- ggplot(data=df_amenities_business[df_amenities_business$`Business Center_PL`!=''], aes(x=`Business Center_PL`,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" , width = 0.3) +
labs(y="LRH",x="Business Center")
t9
t10<- ggplot(data=df_amenities_business[df_amenities_business$Golf_PL!=''], aes(x=Golf_PL,y=Likelihood_Recommend_H)) +
geom_bar(stat="summary",fun.data="mean_se", color="blue", fill="#87ceeb" , width = 0.3)  +
labs(y="LRH",x="Golf")
t10
grid.arrange(t7,t8,t9,t10)
df_busines_detractors <- df_hotel_business[df_hotel_business$NPS_Type=="Detractor"]
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H+Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL + POV_H + Internet_Sat_H + Age_Range_H +Length_Stay_H + Guest_Country_H + `F&B_Overall_Experience_H` + ROOM_TYPE_CODE_C + City_PL + Gender_H)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H)
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H )
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H  Customer_SVC_H )
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H )
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H )
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H )
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL)
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + POV_H)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + Internet_Sat_H)
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + Internet_Sat_H  + Age_Range_H )
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + Internet_Sat_H  + Age_Range_H +Length_Stay_H)
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + Internet_Sat_H  + Age_Range_H +Length_Stay_H  + Guest_Country_H)
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + Internet_Sat_H  + Age_Range_H +Length_Stay_H  + Guest_Country_H + `F&B_Overall_Experience_H`)
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + Internet_Sat_H  + Age_Range_H +Length_Stay_H  + Guest_Country_H + `F&B_Overall_Experience_H`  + ROOM_TYPE_CODE_C )
summary(linear_model_detractors)
linear_model_detractors <- lm(data = df_busines_detractors , Likelihood_Recommend_H~Condition_Hotel_H + Staff_Cared_H + Customer_SVC_H + Guest_Room_H + Overall_Sat_H + Brand_PL  + Internet_Sat_H  + Age_Range_H +Length_Stay_H  + Guest_Country_H + `F&B_Overall_Experience_H`  + ROOM_TYPE_CODE_C + City_PL + Gender_H)
summary(linear_model_detractors)
library(arules)
library(arulesViz)
df_hotel_business$willRecommend <- as.factor(as.numeric(df_hotel_business$Likelihood_Recommend_H > 7))
splitData <- function(dataset){
randIndex <- sample(1:nrow(dataset))
cutPoint <- floor(2 * nrow(dataset) / 3)
trainingData <- dataset[randIndex[1:cutPoint],]
testingData <- dataset[randIndex[(cutPoint + 1): nrow(dataset)],]
return(list(trainingData, testingData))
}
colnames(df_hotel_data)
tmp <- splitData(df_hotel_business[,c(-5)])
trainingData <- as.data.frame(tmp[1])
testingData <- as.data.frame(tmp[2])
rm(tmp)
splitData <- function(dataset){
randIndex <- sample(1:nrow(dataset))
cutPoint <- floor(2 * nrow(dataset) / 3)
trainingData <- dataset[randIndex[1:cutPoint],]
testingData <- dataset[randIndex[(cutPoint + 1): nrow(dataset)],]
return(list(trainingData, testingData))
}
colnames(df_hotel_business)
tmp <- splitData(df_hotel_business[,c(-5)])
tmp <- splitData(df_hotel_business)
trainingData <- as.data.frame(tmp[1])
testingData <- as.data.frame(tmp[2])
rm(tmp)
ksvmModel <- ksvm(df_hotel_business[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
library(kernlab)
ksvmModel <- ksvm(df_hotel_business[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
ksvmModel <- ksvm(df_hotel_business[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
rm(df_hotel_business$ROOM_TYPE_CODE_C)
colnames(df_hotel_business)
df_hotel_business_1 <- df_hotel_business[c(-1)]
ksvmModel <- ksvm(df_hotel_business_1[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
tmp <- splitData(df_hotel_business[c(-1)])
trainingData <- as.data.frame(tmp[1])
testingData <- as.data.frame(tmp[2])
rm(tmp)
colnames(df_hotel_business)
df_hotel_business_1 <- df_hotel_business[c(-1)]
ksvmModel <- ksvm(df_hotel_business_1[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
colnames(trainingData)
trainingData <- trainingData[c(-1)]
testingData <- testingData[c(-1)]
ksvmModel <- ksvm(df_hotel_business_1[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
df_hotel_business$LENGTH_OF_STAY_C <- as.numeric(df_hotel_business$LENGTH_OF_STAY_C)
tmp <- splitData(df_hotel_business[c(-1)])
trainingData <- as.data.frame(tmp[1])
testingData <- as.data.frame(tmp[2])
rm(tmp)
trainingData <- trainingData[c(-1)]
testingData <- testingData[c(-1)]
colnames(df_hotel_business)
df_hotel_business_1 <- df_hotel_business[c(-1)]
ksvmModel <- ksvm(df_hotel_business_1[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
ksvmPred <- predict(ksvmModel, testingData, type = "response")
df_hotel_business_1 <- df_hotel_business[c(-1,-2)]
ksvmModel <- ksvm(df_hotel_business_1[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
tmp <- splitData(df_hotel_business[c(-1,-2)])
trainingData <- as.data.frame(tmp[1])
testingData <- as.data.frame(tmp[2])
rm(tmp)
trainingData <- trainingData[c(-1)]
colnames(df_hotel_business)
df_hotel_business_1 <- df_hotel_business[c(-1,-2)]
ksvmModel <- ksvm(df_hotel_business_1[,"willRecommend"] ~ ., data = trainingData, kernel = "rbfdot",kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
ksvmPred <- predict(ksvmModel, testingData, type = "response")
ksvmErr <- sum(testingData[,'willRecommend'] != ksvmPred) * 100 /
length(ksvmPred)
library(e1071)
svmModel <- svm(trainingData[,"willRecommend"] ~ ., data = trainingData, kernel = "linear", kpar = "automatic", C = 5, cross = 3, prob.model = TRUE)
svmPred <- predict(svmModel, testingData, type = "response")
svmErr <- sum(testingData[,'willRecommend'] != svmPred) * 100 /
length(svmPred)
library(arules)
library(arulesViz)
rule1 <- apriori(df_hotel_business,parameter=list(support=0.05, confidence=0.8))
rule1 <- sort(rule1, decreasing = TRUE, by= "confidence")
mycol<- names(df_hotel_business) %in% c(
"Likelihood_Recommend_H",
"Overall_Sat_H",
"Guest_Room_H",
"Tranquility_H",
"Condition_Hotel_H",
"Customer_SVC_H",
"Staff_Cared_H",
"Internet_Sat_H",
"Check_In_H"
)
df_survey_data <- df_hotel_data[mycol]
df_survey_data <- df_hotel_business[mycol]
survey_LRH6<- df_survey_data[which(df_survey_data$Likelihood_Recommend_H < 6,arr.ind = TRUE),]
survey_LRH6$Likelihood_Recommend_H <- as.factor(survey_LRH6$Likelihood_Recommend_H)
survey_LRH6$Overall_Sat_H <- as.factor(survey_LRH6$Overall_Sat_H)
survey_LRH6$Guest_Room_H <- as.factor(survey_LRH6$Guest_Room_H)
survey_LRH6$Tranquility_H <- as.factor(survey_LRH6$Tranquility_H)
survey_LRH6$Condition_Hotel_H <- as.factor(survey_LRH6$Condition_Hotel_H)
survey_LRH6$Customer_SVC_H <- as.factor(survey_LRH6$Customer_SVC_H)
survey_LRH6$Staff_Cared_H <- as.factor(survey_LRH6$Staff_Cared_H)
survey_LRH6$Internet_Sat_H <- as.factor(survey_LRH6$Internet_Sat_H)
survey_LRH6$Check_In_H <- as.factor(survey_LRH6$Check_In_H)
rule1 <- apriori(survey_LRH6,parameter=list(support=0.05, confidence=0.8))
colnames(survey_LRH6)
colnames(df_survey_data)
survey_LRH6 <- df_survey_data[which(df_survey_data$Likelihood_Recommend_H < 6,arr.ind = TRUE),]
mycol<- names(df_hotel_business) %in% c(
"Likelihood_Recommend_H",
"Overall_Sat_H",
"Guest_Room_H",
"Tranquility_H",
"Condition_Hotel_H",
"Customer_SVC_H",
"Staff_Cared_H",
"Internet_Sat_H",
"Check_In_H"
)
df_survey_data <- df_hotel_business[mycol]
tapply(df_hotel_final$POV_H , df_hotel_final$POV_H , length)
final_df <- clean_data('data/out-201501.csv')
final_df <- clean_data('data/out-201402.csv')
final_df <- clean_data('data/out-201403.csv')
final_df <- clean_data('data/out-201404.csv')
final_df <- clean_data('data/out-201405.csv')
final_df <- clean_data('data/out-201406.csv')
final_df <- clean_data('data/out-201407.csv')
final_df <- clean_data('data/out-201408.csv')
final_df <- clean_data('data/out-201409.csv')
final_df <- clean_data('data/out-201410.csv')
df_hotel_final <- final_df
tapply(df_hotel_final$POV_H , df_hotel_final$POV_H , length)
data.frame(tapply(df_hotel_final$POV_H , df_hotel_final$POV_H , length))
ggplot(data.frame(tapply(df_hotel_final$POV_H , df_hotel_final$POV_H , length))) + geom_bar()
ggplot(data.frame(tapply(df_hotel_final$POV_H , df_hotel_final$POV_H , length))) + geom_bar(aes(x=POV_H))
ggplot(data.frame(tapply(df_hotel_final$POV_H , df_hotel_final$POV_H , length))) + geom_bar(aes(x=df_hotel_final$POV_H))
pov_data <- data.frame(tapply(df_hotel_final$POV_H , df_hotel_final$POV_H , length))
hist(pov_data)
hist(pov_data$tapply.df_hotel_final.POV_H..df_hotel_final.POV_H..length.)
